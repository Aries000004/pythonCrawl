test_log_file (__main__.EnablePrettyLoggingTest) ... ok
test_basic_logging (__main__.LogFormatterTest) ... ERROR
test_bytes_exception_logging (__main__.LogFormatterTest) ... ERROR
test_bytes_logging (__main__.LogFormatterTest) ... ERROR
test_utf8_logging (__main__.LogFormatterTest) ... ERROR
test_default (__main__.LoggingOptionTest) ... ok
test_disable_code_none (__main__.LoggingOptionTest) ... FAIL
test_disable_code_string (__main__.LoggingOptionTest) ... ok
test_disable_command_line (__main__.LoggingOptionTest) ... ok
test_disable_command_line_case_insensitive (__main__.LoggingOptionTest) ... FAIL
test_disable_override (__main__.LoggingOptionTest) ... ok
test_tornado_default (__main__.LoggingOptionTest) ... ok
test_basic_logging (__main__.UnicodeLogFormatterTest) ... ERROR
test_bytes_exception_logging (__main__.UnicodeLogFormatterTest) ... ERROR
test_bytes_logging (__main__.UnicodeLogFormatterTest) ... ERROR
test_unicode_logging (__main__.UnicodeLogFormatterTest) ... ERROR
test_utf8_logging (__main__.UnicodeLogFormatterTest) ... ERROR

======================================================================
ERROR: test_basic_logging (__main__.LogFormatterTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test/log_test.py", line 97, in test_basic_logging
    self.assertEqual(self.get_output(), b"foo")
  File "test/log_test.py", line 93, in get_output
    raise Exception("output didn't match regex: %r" % line)
Exception: output didn't match regex: '[E 141015 17:37:46 log_test:96] foo'

======================================================================
ERROR: test_bytes_exception_logging (__main__.LogFormatterTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test/log_test.py", line 124, in test_bytes_exception_logging
    output = self.get_output()
  File "test/log_test.py", line 93, in get_output
    raise Exception("output didn't match regex: %r" % line)
Exception: output didn't match regex: '[E 141015 17:37:46 log_test:121] caught exception\n    Traceback (most recent call last):\n      File "test/log_test.py", line 119, in test_bytes_exception_logging\n        raise Exception(b\'\\xe9\')\n    \'Exception: \\xe9\''

======================================================================
ERROR: test_bytes_logging (__main__.LogFormatterTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test/log_test.py", line 103, in test_bytes_logging
    self.assertEqual(self.get_output(), utf8(repr(b"\xe9")))
  File "test/log_test.py", line 93, in get_output
    raise Exception("output didn't match regex: %r" % line)
Exception: output didn't match regex: "[E 141015 17:37:46 log_test:102] '\\xe9'"

======================================================================
ERROR: test_utf8_logging (__main__.LogFormatterTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test/log_test.py", line 110, in test_utf8_logging
    self.assertEqual(self.get_output(), utf8(u("\u00e9")))
  File "test/log_test.py", line 93, in get_output
    raise Exception("output didn't match regex: %r" % line)
Exception: output didn't match regex: '[E 141015 17:37:46 log_test:106] \xc3\xa9'

======================================================================
ERROR: test_basic_logging (__main__.UnicodeLogFormatterTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test/log_test.py", line 97, in test_basic_logging
    self.assertEqual(self.get_output(), b"foo")
  File "test/log_test.py", line 93, in get_output
    raise Exception("output didn't match regex: %r" % line)
Exception: output didn't match regex: '[E 141015 17:37:47 log_test:96] foo'

======================================================================
ERROR: test_bytes_exception_logging (__main__.UnicodeLogFormatterTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test/log_test.py", line 124, in test_bytes_exception_logging
    output = self.get_output()
  File "test/log_test.py", line 93, in get_output
    raise Exception("output didn't match regex: %r" % line)
Exception: output didn't match regex: '[E 141015 17:37:47 log_test:121] caught exception\n    Traceback (most recent call last):\n      File "test/log_test.py", line 119, in test_bytes_exception_logging\n        raise Exception(b\'\\xe9\')\n    \'Exception: \\xe9\''

======================================================================
ERROR: test_bytes_logging (__main__.UnicodeLogFormatterTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test/log_test.py", line 103, in test_bytes_logging
    self.assertEqual(self.get_output(), utf8(repr(b"\xe9")))
  File "test/log_test.py", line 93, in get_output
    raise Exception("output didn't match regex: %r" % line)
Exception: output didn't match regex: "[E 141015 17:37:47 log_test:102] '\\xe9'"

======================================================================
ERROR: test_unicode_logging (__main__.UnicodeLogFormatterTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test/log_test.py", line 139, in test_unicode_logging
    self.assertEqual(self.get_output(), utf8(u("\u00e9")))
  File "test/log_test.py", line 93, in get_output
    raise Exception("output didn't match regex: %r" % line)
Exception: output didn't match regex: '[E 141015 17:37:47 log_test:138] \xc3\xa9'

======================================================================
ERROR: test_utf8_logging (__main__.UnicodeLogFormatterTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test/log_test.py", line 110, in test_utf8_logging
    self.assertEqual(self.get_output(), utf8(u("\u00e9")))
  File "test/log_test.py", line 93, in get_output
    raise Exception("output didn't match regex: %r" % line)
Exception: output didn't match regex: '[E 141015 17:37:47 log_test:106] \xc3\xa9'

======================================================================
FAIL: test_disable_code_none (__main__.LoggingOptionTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test/log_test.py", line 209, in test_disable_code_none
    'options.logging = None; parse_command_line()'))
AssertionError: True is not false

======================================================================
FAIL: test_disable_command_line_case_insensitive (__main__.LoggingOptionTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test/log_test.py", line 201, in test_disable_command_line_case_insensitive
    ['--logging=None']))
  File "test/log_test.py", line 186, in logs_present
    self.assertEqual(proc.returncode, 0, 'process failed: %r' % stdout)
AssertionError: process failed: 'Traceback (most recent call last):\n  File "<string>", line 1, in <module>\n  File "/usr/local/lib/python2.7/site-packages/tornado-3.1.1-py2.7.egg/tornado/options.py", line 511, in parse_command_line\n    return options.parse_command_line(args, final=final)\n  File "/usr/local/lib/python2.7/site-packages/tornado-3.1.1-py2.7.egg/tornado/options.py", line 252, in parse_command_line\n    self.run_parse_callbacks()\n  File "/usr/local/lib/python2.7/site-packages/tornado-3.1.1-py2.7.egg/tornado/options.py", line 313, in run_parse_callbacks\n    callback()\n  File "/usr/local/lib/python2.7/site-packages/tornado-3.1.1-py2.7.egg/tornado/stack_context.py", line 331, in wrapped\n    raise_exc_info(exc)\n  File "/usr/local/lib/python2.7/site-packages/tornado-3.1.1-py2.7.egg/tornado/stack_context.py", line 302, in wrapped\n    ret = fn(*args, **kwargs)\n  File "/usr/local/lib/python2.7/site-packages/tornado-3.1.1-py2.7.egg/tornado/log.py", line 166, in enable_pretty_logging\n    logger.setLevel(getattr(logging, options.logging.upper()))\nAttributeError: \'module\' object has no attribute \'NONE\'\n'

----------------------------------------------------------------------
Ran 17 tests in 0.798s

测试17个
FAILED (failures=2, errors=9)
